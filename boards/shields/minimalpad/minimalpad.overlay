#include <dt-bindings/zmk/matrix_transform.h>
#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/led/led.h>
#include "elpekenin/behaviors.dtsi"

#define NC 0xFFFFFFFF  /* Use to signal that a pin is not connected */

/ {
    chosen {
        zmk,kscan = &kscan0;
        zmk,matrix_transform = &default_transform;
        zmk,underglow = &led_strip;
    };

    gpios {
        compatible = "gpio-leds";
        layer0_led: layer0 {
            gpios = <&gpio1 13 GPIO_ACTIVE_LOW>;  // Left LED - first layer
            label = "Layer 0 LED";
        };
        layer1_led: layer1 {
            gpios = <&gpio0 9 GPIO_ACTIVE_LOW>;   // Middle LED - second layer
            label = "Layer 1 LED";
        };
        layer2_led: layer2 {
            gpios = <&gpio1 11 GPIO_ACTIVE_LOW>;  // Right LED - third layer
            label = "Layer 2 LED";
        };
    };

    layer_callbacks {
        compatible = "elpekenin,layer-callback";
        
        default_layer_on {
            layer = <0>;  // DEFAULT layer
            event = "on-activation";
            bindings = <&gpio1 13 GPIO_ON>;  // Left LED
        };
        default_layer_off {
            layer = <0>;  // DEFAULT layer
            event = "on-deactivation";
            bindings = <&gpio1 13 GPIO_OFF>;
        };
        
        lower_layer_on {
            layer = <1>;  // LOWER layer
            event = "on-activation";
            bindings = <&gpio0 9 GPIO_ON>;  // Middle LED
        };
        lower_layer_off {
            layer = <1>;  // LOWER layer
            event = "on-deactivation";
            bindings = <&gpio0 9 GPIO_OFF>;
        };
        
        raise_layer_on {
            layer = <2>;  // RAISE layer
            event = "on-activation";
            bindings = <&gpio1 11 GPIO_ON>;  // Right LED
        };
        raise_layer_off {
            layer = <2>;  // RAISE layer
            event = "on-deactivation";
            bindings = <&gpio1 11 GPIO_OFF>;
        };
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <4>;
        rows = <3>;
        map = <
            RC(0,0) RC(0,1) RC(0,2)
            RC(1,0) RC(1,1) RC(1,2)
            RC(2,0) RC(2,1) RC(2,2)
            RC(2,3) RC(1,3) RC(0,3)
        >;
    };

    kscan0: kscan_0 {
        compatible = "zmk,kscan-gpio-matrix";
        diode-direction = "col2row";

        col-gpios
            = <&gpio0 31 GPIO_ACTIVE_HIGH>
            , <&gpio0 29 GPIO_ACTIVE_HIGH>
            , <&gpio0 2 GPIO_ACTIVE_HIGH>
            ;

        row-gpios
            = <&gpio1 15 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&gpio1 13 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&gpio1 11 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&gpio1 7 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            ;
    };

    sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&encoder0>;
    };

    encoder0: encoder_0 {
        compatible = "alps,ec11";
        a-gpios = <&gpio1 1 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&gpio1 2 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        status = "okay";
    };
};

&pinctrl {
    spi3_default: spi3_default {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 17)>;
        };
        #sensor-binding-cells = <2>;
    };

    spi3_sleep: spi3_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 17)>;
            low-power-enable;
        };
    };
};

&spi3 {
    compatible = "nordic,nrf-spim";
    status = "okay";

    pinctrl-0 = <&spi3_default>;
    pinctrl-1 = <&spi3_sleep>;
    pinctrl-names = "default", "sleep";

    led_strip: ws2812@0 {
        compatible = "worldsemi,ws2812-spi";

        /* SPI */
        reg = <0>;
        spi-max-frequency = <4000000>;

        /* WS2812 */
        chain-length = <16>; /* Updated to 16 LEDs */
        spi-one-frame = <0x70>;
        spi-zero-frame = <0x40>;
        color-mapping = <LED_COLOR_ID_GREEN LED_COLOR_ID_RED LED_COLOR_ID_BLUE>;
    };
};

&timer0 {
    status = "okay";
    compatible = "nordic,nrf-timer";
    prescaler = <4>;
};

&timer1 {
    status = "okay";
    compatible = "nordic,nrf-timer";
    prescaler = <4>;
};


