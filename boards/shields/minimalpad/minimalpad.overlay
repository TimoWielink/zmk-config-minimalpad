#include <dt-bindings/zmk/matrix_transform.h>
#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/led/led.h>
#include "elpekenin/behaviors.dtsi"

#define NC 0xFFFFFFFF  /* Use to signal that a pin is not connected */

/ {
    chosen {
        zmk,kscan = &kscan0;
        zmk,matrix_transform = &default_transform;
        zmk,underglow = &led_strip;
    };

    aliases {
        layer0-led = &led_layer0;
        layer1-led = &led_layer1;
        layer2-led = &led_layer2;
    };

    leds {
        compatible = "gpio-leds";
        led_layer0: led_0 {
            gpios = <&gpio1 13 GPIO_ACTIVE_LOW>;  // D15
            label = "Layer 0 LED";
        };
        led_layer1: led_1 {
            gpios = <&gpio0 9 GPIO_ACTIVE_LOW>;   // D10
            label = "Layer 1 LED";
        };
        led_layer2: led_2 {
            gpios = <&gpio1 11 GPIO_ACTIVE_LOW>;  // D14
            label = "Layer 2 LED";
        };
    };

    layer_callbacks {
        compatible = "elpekenin,layer-callback";
        
        default_layer_on {
            layer = <0>;  // DEFAULT layer
            event = "on-activation";
            bindings = <&gpio 0 GPIO_ON>;
        };
        default_layer_off {
            layer = <0>;  // DEFAULT layer
            event = "on-deactivation";
            bindings = <&gpio 0 GPIO_OFF>;
        };
        
        lower_layer_on {
            layer = <1>;  // LOWER layer
            event = "on-activation";
            bindings = <&gpio 1 GPIO_ON>;
        };
        lower_layer_off {
            layer = <1>;  // LOWER layer
            event = "on-deactivation";
            bindings = <&gpio 1 GPIO_OFF>;
        };
        
        raise_layer_on {
            layer = <2>;  // RAISE layer
            event = "on-activation";
            bindings = <&gpio 2 GPIO_ON>;
        };
        raise_layer_off {
            layer = <2>;  // RAISE layer
            event = "on-deactivation";
            bindings = <&gpio 2 GPIO_OFF>;
        };
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <5>;
        rows = <4>;
        map = <
            RC(0,1) RC(0,2) RC(0,3) RC(0,4)
            RC(1,1) RC(1,2) RC(1,3) RC(1,4)
            RC(2,1) RC(2,2) RC(2,3) RC(2,4)
            RC(3,0) RC(3,1) RC(3,2) RC(3,3)  // Encoder button is RC(3,0)
        >;
    };

    kscan0: kscan_0 {
        compatible = "zmk,kscan-gpio-matrix";
        diode-direction = "col2row";

        col-gpios
            = <&gpio0 24 GPIO_ACTIVE_HIGH>  // Col 0 - D5 (Encoder button)
            , <&gpio1 0 GPIO_ACTIVE_HIGH>   // Col 1 - D6
            , <&gpio0 11 GPIO_ACTIVE_HIGH>  // Col 2 - D7
            , <&gpio1 4 GPIO_ACTIVE_HIGH>   // Col 3 - D8
            , <&gpio1 6 GPIO_ACTIVE_HIGH>   // Col 4 - D9
            ;

        row-gpios
            = <&gpio0 31 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // Row 0 - D21 (P0.31)
            , <&gpio0 29 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // Row 1 - D20 (P0.29)
            , <&gpio0 2 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>   // Row 2 - D19 (P0.02)
            , <&gpio1 15 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // Row 3 - D18 (P1.15)
            ;
    };

    sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&encoder0>;
    };

    encoder0: encoder_0 {
        compatible = "alps,ec11";
        a-gpios = <&gpio0 22 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;  // D4
        b-gpios = <&gpio0 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;  // D16
        status = "okay";
    };
};

&pinctrl {
    spi3_default: spi3_default {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 17)>;
        };
        #sensor-binding-cells = <2>;
    };

    spi3_sleep: spi3_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 17)>;
            low-power-enable;
        };
    };
};

&spi3 {
    compatible = "nordic,nrf-spim";
    status = "okay";

    pinctrl-0 = <&spi3_default>;
    pinctrl-1 = <&spi3_sleep>;
    pinctrl-names = "default", "sleep";

    led_strip: ws2812@0 {
        compatible = "worldsemi,ws2812-spi";

        /* SPI */
        reg = <0>;
        spi-max-frequency = <4000000>;

        /* WS2812 */
        chain-length = <16>; /* number of LEDs */
        spi-one-frame = <0x70>;
        spi-zero-frame = <0x40>;
        color-mapping = <LED_COLOR_ID_RED LED_COLOR_ID_GREEN LED_COLOR_ID_BLUE>;
    };
};

&timer0 {
    status = "okay";
    compatible = "nordic,nrf-timer";
    prescaler = <4>;
};

&timer1 {
    status = "okay";
    compatible = "nordic,nrf-timer";
    prescaler = <4>;
};


